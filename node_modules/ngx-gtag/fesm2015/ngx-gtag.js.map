{"version":3,"file":"ngx-gtag.js.map","sources":["ng://ngx-gtag/lib/google-analytics-events/google-analytics-events.service.ts","ng://ngx-gtag/lib/google-analytics.token.ts","ng://ngx-gtag/lib/google-anaytics/google-anaytics.service.ts","ng://ngx-gtag/lib/google-anaytics/google-anaytics.component.ts","ng://ngx-gtag/lib/google-analytics-events/google-analytics-events.directive.ts","ng://ngx-gtag/lib/google-analytics.module.ts"],"sourcesContent":["import { Injectable, PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NgxGtagEvent } from '../google-analytics.interface';\ndeclare var gtag: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxGtagEventService {\n  constructor(\n    @Inject(PLATFORM_ID) private platform: Object) { }\n\n  event(event: NgxGtagEvent) {\n    if(isPlatformBrowser(this.platform)){\n      try {\n        gtag('event', event.action, event.options);\n      } catch (err) {\n        console.error('Error occured with google analytics event', err);\n      }\n    }\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const NGX_GTAG_CONFIG = new InjectionToken<string>('NGX_GTAG_CONFIG');\n","import { Injectable, Inject, PLATFORM_ID, Renderer2 } from '@angular/core';\nimport { isPlatformBrowser, DOCUMENT } from '@angular/common';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { NGX_GTAG_CONFIG } from '../google-analytics.token';\nimport { NgxGtag, NgxGtagList } from '../google-analytics.interface';\n\ndeclare const gtag: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GoogleAnayticsService {\n    trackingId: string;\n    renderer: Renderer2;\n\n    constructor(\n        private router: Router,\n        @Inject(NGX_GTAG_CONFIG) private config: NgxGtag,\n        @Inject(DOCUMENT) private document,\n        @Inject(PLATFORM_ID) private platform: Object\n    ) {}\n\n    startTracking() {\n        if (isPlatformBrowser(this.platform)) {\n            if(Array.isArray(this.config)){\n                this.config.forEach((conf: NgxGtag) => {\n                    conf.options = {};\n                    let s1 = this.renderer.createElement('script');\n                    s1.src = `https://www.googletagmanager.com/gtag/js?id='${conf.trackingId}'`;\n                    this.renderer.appendChild(this.document.head, s1);\n                })\n            }\n            else if(this.config.options === undefined) {\n                this.config.options = {};\n                let s1 = this.renderer.createElement('script');\n                s1.src = `https://www.googletagmanager.com/gtag/js?id='${this.config.trackingId}'`;\n                this.renderer.appendChild(this.document.head, s1);\n            }\n\n            let s2 = this.renderer.createElement('script');\n            const text = this.renderer.createText(`window.dataLayer=window.dataLayer||[];function gtag(){dataLayer.push(arguments);}gtag('js',new Date());`);\n\n            this.renderer.appendChild(s2, text);\n            this.renderer.appendChild(this.document.head, s2);\n\n            this.router.events\n                .pipe(filter(event => event instanceof NavigationEnd))\n                .subscribe((navEnd: NavigationEnd) => {\n                    if(Array.isArray(this.config)){\n                        this.config.forEach((conf: NgxGtag) => {\n                            conf.options.page_path = navEnd.urlAfterRedirects\n                            gtag('config', conf.trackingId, conf.options);\n                        })\n                    }else{\n                        this.config.options.page_path = navEnd.urlAfterRedirects\n                        gtag('config', this.config.trackingId, this.config.options);\n                    }\n                });\n        }\n    }\n}\n","import { Component, OnInit, Renderer2 } from '@angular/core';\nimport { GoogleAnayticsService } from './google-anaytics.service';\n\n@Component({\n    selector: 'ngx-gtag',\n    template: ''\n})\nexport class GoogleAnayticsComponent implements OnInit {\n    constructor(\n        private service: GoogleAnayticsService,\n        private renderer: Renderer2\n    ) {\n        this.service.renderer = this.renderer;\n    }\n\n    ngOnInit() {\n        this.service.startTracking();\n    }\n}\n","import { Directive, Renderer2, Input, AfterViewInit, ElementRef } from '@angular/core';\nimport { NgxGtagEventService } from './google-analytics-events.service';\n\n@Directive({\n  selector: '[ngxGtagEvent]'\n})\nexport class GoogleAnalyticsEventsDirective implements AfterViewInit {\n  @Input() gtagOn: string;\n  @Input() gtagTrackingId: string;\n  @Input() gtagAction: string;\n  @Input() gtagOptions: any;\n\n  constructor(\n    private ngxGtagEventService: NgxGtagEventService,\n    private renderer: Renderer2,\n    private el: ElementRef\n  ) {}\n\n  ngAfterViewInit() {\n    try {\n      this.renderer.listen(this.el.nativeElement, this.gtagOn, () => {\n        this.ngxGtagEventService.event({ action: this.gtagAction || this.gtagOn, options: { ...this.gtagOptions}});\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  }\n}","import {\n    NgModule,\n    ModuleWithProviders,\n    Optional,\n    SkipSelf\n} from '@angular/core';\nimport { NGX_GTAG_CONFIG } from './google-analytics.token';\nimport { NgxGtag, NgxGtagList } from './google-analytics.interface';\nimport { GoogleAnayticsComponent } from './google-anaytics/google-anaytics.component';\nimport { GoogleAnalyticsEventsDirective } from './google-analytics-events/google-analytics-events.directive';\n\n@NgModule({\n    declarations: [\n        GoogleAnayticsComponent,\n        GoogleAnalyticsEventsDirective\n    ],\n    exports: [\n        GoogleAnayticsComponent,\n        GoogleAnalyticsEventsDirective\n    ]\n})\nexport class NgxGtagModule {\n    constructor(\n        @Optional()\n        @SkipSelf()\n        parentModule: NgxGtagModule\n    ) {\n        if (parentModule) {\n            throw new Error(\n                'ngx-gtag should only be loaded in one module, preferably your root or core module.'\n            );\n        }\n    }\n    static forRoot(options: NgxGtag|NgxGtagList): ModuleWithProviders {\n        return {\n            ngModule: NgxGtagModule,\n            providers: [\n                {\n                    provide: NGX_GTAG_CONFIG,\n                    useValue: options\n                }\n            ]\n        };\n    }\n}\n"],"names":[],"mappings":"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"}
