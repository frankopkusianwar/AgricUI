/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Renderer2, Input, ElementRef } from '@angular/core';
import { NgxGtagEventService } from './google-analytics-events.service';
export class GoogleAnalyticsEventsDirective {
    /**
     * @param {?} ngxGtagEventService
     * @param {?} renderer
     * @param {?} el
     */
    constructor(ngxGtagEventService, renderer, el) {
        this.ngxGtagEventService = ngxGtagEventService;
        this.renderer = renderer;
        this.el = el;
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        try {
            this.renderer.listen(this.el.nativeElement, this.gtagOn, () => {
                this.ngxGtagEventService.event({ action: this.gtagAction || this.gtagOn, options: Object.assign({}, this.gtagOptions) });
            });
        }
        catch (err) {
            console.error(err);
        }
    }
}
GoogleAnalyticsEventsDirective.decorators = [
    { type: Directive, args: [{
                selector: '[ngxGtagEvent]'
            },] }
];
/** @nocollapse */
GoogleAnalyticsEventsDirective.ctorParameters = () => [
    { type: NgxGtagEventService },
    { type: Renderer2 },
    { type: ElementRef }
];
GoogleAnalyticsEventsDirective.propDecorators = {
    gtagOn: [{ type: Input }],
    gtagTrackingId: [{ type: Input }],
    gtagAction: [{ type: Input }],
    gtagOptions: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    GoogleAnalyticsEventsDirective.prototype.gtagOn;
    /** @type {?} */
    GoogleAnalyticsEventsDirective.prototype.gtagTrackingId;
    /** @type {?} */
    GoogleAnalyticsEventsDirective.prototype.gtagAction;
    /** @type {?} */
    GoogleAnalyticsEventsDirective.prototype.gtagOptions;
    /**
     * @type {?}
     * @private
     */
    GoogleAnalyticsEventsDirective.prototype.ngxGtagEventService;
    /**
     * @type {?}
     * @private
     */
    GoogleAnalyticsEventsDirective.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    GoogleAnalyticsEventsDirective.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ29vZ2xlLWFuYWx5dGljcy1ldmVudHMuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWd0YWcvIiwic291cmNlcyI6WyJsaWIvZ29vZ2xlLWFuYWx5dGljcy1ldmVudHMvZ29vZ2xlLWFuYWx5dGljcy1ldmVudHMuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQWlCLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN2RixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUt4RSxNQUFNLE9BQU8sOEJBQThCOzs7Ozs7SUFNekMsWUFDVSxtQkFBd0MsRUFDeEMsUUFBbUIsRUFDbkIsRUFBYztRQUZkLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBcUI7UUFDeEMsYUFBUSxHQUFSLFFBQVEsQ0FBVztRQUNuQixPQUFFLEdBQUYsRUFBRSxDQUFZO0lBQ3JCLENBQUM7Ozs7SUFFSixlQUFlO1FBQ2IsSUFBSTtZQUNGLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFO2dCQUM1RCxJQUFJLENBQUMsbUJBQW1CLENBQUMsS0FBSyxDQUFDLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxVQUFVLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRSxPQUFPLG9CQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsRUFBQyxDQUFDLENBQUM7WUFDN0csQ0FBQyxDQUFDLENBQUM7U0FDSjtRQUFDLE9BQU8sR0FBRyxFQUFFO1lBQ1osT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUNwQjtJQUNILENBQUM7OztZQXZCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGdCQUFnQjthQUMzQjs7OztZQUpRLG1CQUFtQjtZQURSLFNBQVM7WUFBd0IsVUFBVTs7O3FCQU81RCxLQUFLOzZCQUNMLEtBQUs7eUJBQ0wsS0FBSzswQkFDTCxLQUFLOzs7O0lBSE4sZ0RBQXdCOztJQUN4Qix3REFBZ0M7O0lBQ2hDLG9EQUE0Qjs7SUFDNUIscURBQTBCOzs7OztJQUd4Qiw2REFBZ0Q7Ozs7O0lBQ2hELGtEQUEyQjs7Ozs7SUFDM0IsNENBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBSZW5kZXJlcjIsIElucHV0LCBBZnRlclZpZXdJbml0LCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ3hHdGFnRXZlbnRTZXJ2aWNlIH0gZnJvbSAnLi9nb29nbGUtYW5hbHl0aWNzLWV2ZW50cy5zZXJ2aWNlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW25neEd0YWdFdmVudF0nXG59KVxuZXhwb3J0IGNsYXNzIEdvb2dsZUFuYWx5dGljc0V2ZW50c0RpcmVjdGl2ZSBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xuICBASW5wdXQoKSBndGFnT246IHN0cmluZztcbiAgQElucHV0KCkgZ3RhZ1RyYWNraW5nSWQ6IHN0cmluZztcbiAgQElucHV0KCkgZ3RhZ0FjdGlvbjogc3RyaW5nO1xuICBASW5wdXQoKSBndGFnT3B0aW9uczogYW55O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgbmd4R3RhZ0V2ZW50U2VydmljZTogTmd4R3RhZ0V2ZW50U2VydmljZSxcbiAgICBwcml2YXRlIHJlbmRlcmVyOiBSZW5kZXJlcjIsXG4gICAgcHJpdmF0ZSBlbDogRWxlbWVudFJlZlxuICApIHt9XG5cbiAgbmdBZnRlclZpZXdJbml0KCkge1xuICAgIHRyeSB7XG4gICAgICB0aGlzLnJlbmRlcmVyLmxpc3Rlbih0aGlzLmVsLm5hdGl2ZUVsZW1lbnQsIHRoaXMuZ3RhZ09uLCAoKSA9PiB7XG4gICAgICAgIHRoaXMubmd4R3RhZ0V2ZW50U2VydmljZS5ldmVudCh7IGFjdGlvbjogdGhpcy5ndGFnQWN0aW9uIHx8IHRoaXMuZ3RhZ09uLCBvcHRpb25zOiB7IC4uLnRoaXMuZ3RhZ09wdGlvbnN9fSk7XG4gICAgICB9KTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICB9XG4gIH1cbn0iXX0=