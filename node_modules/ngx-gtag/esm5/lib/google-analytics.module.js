/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule, Optional, SkipSelf } from '@angular/core';
import { NGX_GTAG_CONFIG } from './google-analytics.token';
import { GoogleAnayticsComponent } from './google-anaytics/google-anaytics.component';
import { GoogleAnalyticsEventsDirective } from './google-analytics-events/google-analytics-events.directive';
var NgxGtagModule = /** @class */ (function () {
    function NgxGtagModule(parentModule) {
        if (parentModule) {
            throw new Error('ngx-gtag should only be loaded in one module, preferably your root or core module.');
        }
    }
    /**
     * @param {?} options
     * @return {?}
     */
    NgxGtagModule.forRoot = /**
     * @param {?} options
     * @return {?}
     */
    function (options) {
        return {
            ngModule: NgxGtagModule,
            providers: [
                {
                    provide: NGX_GTAG_CONFIG,
                    useValue: options
                }
            ]
        };
    };
    NgxGtagModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        GoogleAnayticsComponent,
                        GoogleAnalyticsEventsDirective
                    ],
                    exports: [
                        GoogleAnayticsComponent,
                        GoogleAnalyticsEventsDirective
                    ]
                },] }
    ];
    /** @nocollapse */
    NgxGtagModule.ctorParameters = function () { return [
        { type: NgxGtagModule, decorators: [{ type: Optional }, { type: SkipSelf }] }
    ]; };
    return NgxGtagModule;
}());
export { NgxGtagModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ29vZ2xlLWFuYWx5dGljcy5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZ3RhZy8iLCJzb3VyY2VzIjpbImxpYi9nb29nbGUtYW5hbHl0aWNzLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUNILFFBQVEsRUFFUixRQUFRLEVBQ1IsUUFBUSxFQUNYLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUUzRCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQztBQUN0RixPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSw2REFBNkQsQ0FBQztBQUU3RztJQVdJLHVCQUdJLFlBQTJCO1FBRTNCLElBQUksWUFBWSxFQUFFO1lBQ2QsTUFBTSxJQUFJLEtBQUssQ0FDWCxvRkFBb0YsQ0FDdkYsQ0FBQztTQUNMO0lBQ0wsQ0FBQzs7Ozs7SUFDTSxxQkFBTzs7OztJQUFkLFVBQWUsT0FBNEI7UUFDdkMsT0FBTztZQUNILFFBQVEsRUFBRSxhQUFhO1lBQ3ZCLFNBQVMsRUFBRTtnQkFDUDtvQkFDSSxPQUFPLEVBQUUsZUFBZTtvQkFDeEIsUUFBUSxFQUFFLE9BQU87aUJBQ3BCO2FBQ0o7U0FDSixDQUFDO0lBQ04sQ0FBQzs7Z0JBaENKLFFBQVEsU0FBQztvQkFDTixZQUFZLEVBQUU7d0JBQ1YsdUJBQXVCO3dCQUN2Qiw4QkFBOEI7cUJBQ2pDO29CQUNELE9BQU8sRUFBRTt3QkFDTCx1QkFBdUI7d0JBQ3ZCLDhCQUE4QjtxQkFDakM7aUJBQ0o7Ozs7Z0JBS3FCLGFBQWEsdUJBRjFCLFFBQVEsWUFDUixRQUFROztJQW9CakIsb0JBQUM7Q0FBQSxBQWpDRCxJQWlDQztTQXZCWSxhQUFhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBOZ01vZHVsZSxcbiAgICBNb2R1bGVXaXRoUHJvdmlkZXJzLFxuICAgIE9wdGlvbmFsLFxuICAgIFNraXBTZWxmXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTkdYX0dUQUdfQ09ORklHIH0gZnJvbSAnLi9nb29nbGUtYW5hbHl0aWNzLnRva2VuJztcbmltcG9ydCB7IE5neEd0YWcsIE5neEd0YWdMaXN0IH0gZnJvbSAnLi9nb29nbGUtYW5hbHl0aWNzLmludGVyZmFjZSc7XG5pbXBvcnQgeyBHb29nbGVBbmF5dGljc0NvbXBvbmVudCB9IGZyb20gJy4vZ29vZ2xlLWFuYXl0aWNzL2dvb2dsZS1hbmF5dGljcy5jb21wb25lbnQnO1xuaW1wb3J0IHsgR29vZ2xlQW5hbHl0aWNzRXZlbnRzRGlyZWN0aXZlIH0gZnJvbSAnLi9nb29nbGUtYW5hbHl0aWNzLWV2ZW50cy9nb29nbGUtYW5hbHl0aWNzLWV2ZW50cy5kaXJlY3RpdmUnO1xuXG5ATmdNb2R1bGUoe1xuICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICBHb29nbGVBbmF5dGljc0NvbXBvbmVudCxcbiAgICAgICAgR29vZ2xlQW5hbHl0aWNzRXZlbnRzRGlyZWN0aXZlXG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIEdvb2dsZUFuYXl0aWNzQ29tcG9uZW50LFxuICAgICAgICBHb29nbGVBbmFseXRpY3NFdmVudHNEaXJlY3RpdmVcbiAgICBdXG59KVxuZXhwb3J0IGNsYXNzIE5neEd0YWdNb2R1bGUge1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBAT3B0aW9uYWwoKVxuICAgICAgICBAU2tpcFNlbGYoKVxuICAgICAgICBwYXJlbnRNb2R1bGU6IE5neEd0YWdNb2R1bGVcbiAgICApIHtcbiAgICAgICAgaWYgKHBhcmVudE1vZHVsZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgICAgICAgICduZ3gtZ3RhZyBzaG91bGQgb25seSBiZSBsb2FkZWQgaW4gb25lIG1vZHVsZSwgcHJlZmVyYWJseSB5b3VyIHJvb3Qgb3IgY29yZSBtb2R1bGUuJ1xuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzdGF0aWMgZm9yUm9vdChvcHRpb25zOiBOZ3hHdGFnfE5neEd0YWdMaXN0KTogTW9kdWxlV2l0aFByb3ZpZGVycyB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBuZ01vZHVsZTogTmd4R3RhZ01vZHVsZSxcbiAgICAgICAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgcHJvdmlkZTogTkdYX0dUQUdfQ09ORklHLFxuICAgICAgICAgICAgICAgICAgICB1c2VWYWx1ZTogb3B0aW9uc1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgfTtcbiAgICB9XG59XG4iXX0=