/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Directive, Renderer2, Input, ElementRef } from '@angular/core';
import { NgxGtagEventService } from './google-analytics-events.service';
var GoogleAnalyticsEventsDirective = /** @class */ (function () {
    function GoogleAnalyticsEventsDirective(ngxGtagEventService, renderer, el) {
        this.ngxGtagEventService = ngxGtagEventService;
        this.renderer = renderer;
        this.el = el;
    }
    /**
     * @return {?}
     */
    GoogleAnalyticsEventsDirective.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        try {
            this.renderer.listen(this.el.nativeElement, this.gtagOn, function () {
                _this.ngxGtagEventService.event({ action: _this.gtagAction || _this.gtagOn, options: tslib_1.__assign({}, _this.gtagOptions) });
            });
        }
        catch (err) {
            console.error(err);
        }
    };
    GoogleAnalyticsEventsDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[ngxGtagEvent]'
                },] }
    ];
    /** @nocollapse */
    GoogleAnalyticsEventsDirective.ctorParameters = function () { return [
        { type: NgxGtagEventService },
        { type: Renderer2 },
        { type: ElementRef }
    ]; };
    GoogleAnalyticsEventsDirective.propDecorators = {
        gtagOn: [{ type: Input }],
        gtagTrackingId: [{ type: Input }],
        gtagAction: [{ type: Input }],
        gtagOptions: [{ type: Input }]
    };
    return GoogleAnalyticsEventsDirective;
}());
export { GoogleAnalyticsEventsDirective };
if (false) {
    /** @type {?} */
    GoogleAnalyticsEventsDirective.prototype.gtagOn;
    /** @type {?} */
    GoogleAnalyticsEventsDirective.prototype.gtagTrackingId;
    /** @type {?} */
    GoogleAnalyticsEventsDirective.prototype.gtagAction;
    /** @type {?} */
    GoogleAnalyticsEventsDirective.prototype.gtagOptions;
    /**
     * @type {?}
     * @private
     */
    GoogleAnalyticsEventsDirective.prototype.ngxGtagEventService;
    /**
     * @type {?}
     * @private
     */
    GoogleAnalyticsEventsDirective.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    GoogleAnalyticsEventsDirective.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ29vZ2xlLWFuYWx5dGljcy1ldmVudHMuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWd0YWcvIiwic291cmNlcyI6WyJsaWIvZ29vZ2xlLWFuYWx5dGljcy1ldmVudHMvZ29vZ2xlLWFuYWx5dGljcy1ldmVudHMuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFpQixVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdkYsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFFeEU7SUFTRSx3Q0FDVSxtQkFBd0MsRUFDeEMsUUFBbUIsRUFDbkIsRUFBYztRQUZkLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBcUI7UUFDeEMsYUFBUSxHQUFSLFFBQVEsQ0FBVztRQUNuQixPQUFFLEdBQUYsRUFBRSxDQUFZO0lBQ3JCLENBQUM7Ozs7SUFFSix3REFBZTs7O0lBQWY7UUFBQSxpQkFRQztRQVBDLElBQUk7WUFDRixJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFO2dCQUN2RCxLQUFJLENBQUMsbUJBQW1CLENBQUMsS0FBSyxDQUFDLEVBQUUsTUFBTSxFQUFFLEtBQUksQ0FBQyxVQUFVLElBQUksS0FBSSxDQUFDLE1BQU0sRUFBRSxPQUFPLHVCQUFPLEtBQUksQ0FBQyxXQUFXLENBQUMsRUFBQyxDQUFDLENBQUM7WUFDN0csQ0FBQyxDQUFDLENBQUM7U0FDSjtRQUFDLE9BQU8sR0FBRyxFQUFFO1lBQ1osT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUNwQjtJQUNILENBQUM7O2dCQXZCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGdCQUFnQjtpQkFDM0I7Ozs7Z0JBSlEsbUJBQW1CO2dCQURSLFNBQVM7Z0JBQXdCLFVBQVU7Ozt5QkFPNUQsS0FBSztpQ0FDTCxLQUFLOzZCQUNMLEtBQUs7OEJBQ0wsS0FBSzs7SUFpQlIscUNBQUM7Q0FBQSxBQXhCRCxJQXdCQztTQXJCWSw4QkFBOEI7OztJQUN6QyxnREFBd0I7O0lBQ3hCLHdEQUFnQzs7SUFDaEMsb0RBQTRCOztJQUM1QixxREFBMEI7Ozs7O0lBR3hCLDZEQUFnRDs7Ozs7SUFDaEQsa0RBQTJCOzs7OztJQUMzQiw0Q0FBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIFJlbmRlcmVyMiwgSW5wdXQsIEFmdGVyVmlld0luaXQsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5neEd0YWdFdmVudFNlcnZpY2UgfSBmcm9tICcuL2dvb2dsZS1hbmFseXRpY3MtZXZlbnRzLnNlcnZpY2UnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbbmd4R3RhZ0V2ZW50XSdcbn0pXG5leHBvcnQgY2xhc3MgR29vZ2xlQW5hbHl0aWNzRXZlbnRzRGlyZWN0aXZlIGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCB7XG4gIEBJbnB1dCgpIGd0YWdPbjogc3RyaW5nO1xuICBASW5wdXQoKSBndGFnVHJhY2tpbmdJZDogc3RyaW5nO1xuICBASW5wdXQoKSBndGFnQWN0aW9uOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGd0YWdPcHRpb25zOiBhbnk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBuZ3hHdGFnRXZlbnRTZXJ2aWNlOiBOZ3hHdGFnRXZlbnRTZXJ2aWNlLFxuICAgIHByaXZhdGUgcmVuZGVyZXI6IFJlbmRlcmVyMixcbiAgICBwcml2YXRlIGVsOiBFbGVtZW50UmVmXG4gICkge31cblxuICBuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgdHJ5IHtcbiAgICAgIHRoaXMucmVuZGVyZXIubGlzdGVuKHRoaXMuZWwubmF0aXZlRWxlbWVudCwgdGhpcy5ndGFnT24sICgpID0+IHtcbiAgICAgICAgdGhpcy5uZ3hHdGFnRXZlbnRTZXJ2aWNlLmV2ZW50KHsgYWN0aW9uOiB0aGlzLmd0YWdBY3Rpb24gfHwgdGhpcy5ndGFnT24sIG9wdGlvbnM6IHsgLi4udGhpcy5ndGFnT3B0aW9uc319KTtcbiAgICAgIH0pO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgIH1cbiAgfVxufSJdfQ==